name: CI
on:
  push:
    branches:
      - main
  pull_request:
      types:
        - opened
        - synchronize
        - reopened
  workflow_dispatch: # Allow manual execution of the workflow
  workflow_run: # Trigger on workflows run by Changesets
    workflows: ["Release"]
    types:
      - completed

concurrency: ${{ github.workflow }}-${{ github.ref }}
permissions:
  contents: read # Added for better security
jobs:
  Lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: pnpm
      - run: pnpm install
      - run: pnpm lint

  Types:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install
      - run: pnpm typecheck
  AppLintTest:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: pnpm
      - run: cd ts-next-app && pnpm install && pnpm run lint:against-clear
  AppLintTestExpectFailure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: pnpm
      - run: pnpm install
      - name: Test lint command that is expected to fail
        id: failing_step
        run: |
          cd ts-next-app && pnpm install && pnpm run lint:against-errors
        continue-on-error: true

      - name: Finalize lint failure test
        if: steps.failing_step.outcome == 'success'
        run: |
          echo "ESLint does not check errors for some reason"
          exit 1
  Finalize:
    needs: [Lint, Types, AppLintTest,AppLintTestExpectFailure]
    runs-on: ubuntu-latest
    steps:
      - name: Success
        run: echo "All checks passed. Ready to merge!"
  release:
    # Run on push to main OR on PRs from changeset-release branch to main
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.head_ref == 'changeset-release/main' && github.base_ref == 'main')
    concurrency: release
    # prevents this action from running on forks
    permissions:
      contents: write # to create release (changesets/action)
      pull-requests: write # to create pull request (changesets/action)
      id-token: write

    name: Release
    runs-on: ubuntu-latest
    needs: [Finalize] # Ensure tests pass before running this job
    timeout-minutes: 10 # Added to prevent indefinite runs
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4.1.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x # Updated to a stable LTS version
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset:version
          publish: pnpm changeset:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
